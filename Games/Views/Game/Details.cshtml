@model Games.Models.Game

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Game";
}

<div>
    <h4>Game</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Cover
        </dt>
        <dd class="col-sm-10">
            <img src="@GetImageUrl(Model.CoverUrl)" width="400" height="600" alt="Cover">
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.UserScore)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.UserScore)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.NumberOfUserScores)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.NumberOfUserScores)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ReleaseDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ReleaseDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Summary)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Summary)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.StoryLine)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.StoryLine)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Collection)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Collection.Name)
        </dd>
        <dt class="col-sm-2">
            Companies
        </dt>
        <dd class="col-sm-10">
            <p>
                @string.Join(", ", Model.Companies?.Select(c => c.Name) ?? new string[0])
            </p>
        </dd>
        <dt class="col-sm-2">
            Game modes
        </dt>
        <dd class="col-sm-10">
            <p>
                @string.Join(", ", Model.GameModes?.Select(c => c.Name) ?? new string[0])
            </p>
        </dd>
        <dt class="col-sm-2">
            Genres
        </dt>
        <dd class="col-sm-10">
            <p>
                @string.Join(", ", Model.Genres?.Select(c => c.Name) ?? new string[0])
            </p>
        </dd>
        <dt class="col-sm-2">
            Keywords
        </dt>
        <dd class="col-sm-10">
            <p>
                @string.Join(", ", Model.Keywords?.Select(c => c.Name) ?? new string[0])
            </p>
        </dd>
        <dt class="col-sm-2">
            Reviews
        </dt>
        <dd class="col-sm-10">
            @foreach(Review review in ViewBag.Reviews)
            {
                <p>@review.Owner.Nickname</p><br />
                <p>@review.Date</p><br />
                <p>@review.RateValue</p><br />
                <p>@review.Text</p><hr />
            }
        </dd>
    </dl>
</div>
<div>
    @if (SignInManager.IsSignedIn(User))
    {
        string userName = UserManager.GetUserName(User);
        IdentityUser user = await UserManager.FindByNameAsync(userName);
        @if (user != null && await UserManager.IsInRoleAsync(user, "editor"))
        {
            <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
            <br />
            <form asp-controller="Game" asp-action="Delete" asp-route-id="@Model?.Id" method="post">
                <button type="submit" class="btn btn-link navbar-btn navbar-link"> Delete </button>
            </form>
            <br />
        }
    }
    <a asp-action="Index" asp-controller="Home">Back to List</a>
</div>

@functions{
    public string GetImageUrl(string url)
    {
        if (url.Contains("//images.igdb.com/igdb/image/upload/"))
        {
            return url;
        }
        else if (!string.IsNullOrEmpty(url))
        {
            return Url.Content("~/images/") + url;
        }
        else
        {
            return Url.Content("~/images/") + "no_image.jpg";
        }
    }
}